name: Build and push docker image for pipeline

on:
  push:
    branches:
      - "*"
    tags: 
      - "*.*.*"
  schedule:
    - cron: '0 6 15 * *'  # 15th of each month at 6am

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build_and_test_pipeline_image:
    runs-on: ubuntu-latest

    steps:
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Log into registry ${{ env.REGISTRY }}
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Extract Docker metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

    - name: Build image
      uses: docker/build-push-action@v6
      with:
        annotations: ${{ steps.meta.outputs.annotations }}
        build-args: |
          MEFETCH_EMAIL=${{ secrets.MEFETCH_EMAIL }}
          MEFETCH_API_KEY=${{ secrets.MEFETCH_API_KEY }}
          YA16SDB_VERSION=${{ steps.meta.outputs.version }}
        cache-from: type=gha
        cache-to: type=gha,mode=max
        labels: ${{ steps.meta.outputs.labels }}
        load: true
        push: false
        tags: |
          ${{ steps.meta.outputs.tags }}
          gha_image

    - name: Test run and unnitests
      run: docker run gha_image /bin/bash -c "scons settings=testfiles/settings.conf;python -m unittest"

    - name: Build and push tag
      if: github.ref_type == 'tag'
      uses: docker/build-push-action@v6
      with:
        annotations: ${{ steps.meta.outputs.annotations }}
        cache-from: type=gha
        cache-to: type=gha,mode=max
        labels: ${{ steps.meta.outputs.labels }}
        push: true
        tags: ${{ steps.meta.outputs.tags }}
